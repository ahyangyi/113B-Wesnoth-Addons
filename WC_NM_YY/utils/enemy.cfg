#define WORLD_CONQUEST_AI_BONUSES MAX_SIDE GOLD
{VARIABLE I 4}
[while]
	[variable]
		name=I
		less_than_equal_to={MAX_SIDE}
	[/variable]
	[do]
		# adjust AI gold for difficulty level (AI sides get 50% extra gold per player)
		[if]
			[variable]
				name=difficulty_mod
				not_equals=$null
			[/variable]
			[then]
				[gold]
					side=$I
					amount="$($players*$difficulty_mod*{GOLD}/6+$difficulty_mod*{GOLD}/6-{GOLD}*2)"
				[/gold]
			[/then]
		[/if]

		# AI sides get more recruiting hexes: look for appropriate spots within 2 hexes, contiguous with existing castle
		[store_locations]
			variable=candidates
			[not]
				terrain=Ch,Kh,Xu,Mm^Xm
			[/not]
			[and]
				radius=1
				terrain=Ch
			[/and]
			[and]
				radius=2
				[filter]
					side=$I
				[/filter]				
			[/and]
		[/store_locations]
		[terrain]
			x,y=$candidates[0].x,$candidates[0].y
			terrain=Ch
		[/terrain]
		{VARIABLE_OP rand rand 1..4}
		[terrain]
			x,y=$candidates[$rand].x,$candidates[$rand].y
			terrain=Ch
		[/terrain]
		[terrain]
			x,y=$candidates[$($candidates.length-1-$rand)].x,$candidates[$($candidates.length-1-$rand)].y
			terrain=Ch
		[/terrain]
		[terrain]
			x,y=$candidates[$($candidates.length-1)].x,$candidates[$($candidates.length-1)].y
			terrain=Ch
		[/terrain]
		{CLEAR_VARIABLE candidates}
		{VARIABLE_OP I add 1}
	[/do]
[/while]
#enddef

#define WORLD_CONQUEST_ENEMY SIDE ALLIES LEVEL2 LEVEL3
{VARIABLE best -999}
# find the most likely enemy candidate}
{FOREACH_FROM group 1 I}
	[if]
		[variable]
			name=group[$I].enemy_weight
			greater_than=$best
		[/variable]
		[then]
			{VARIABLE best $group[$I].enemy_weight}
			{VARIABLE enemy $I}
		[/then]
	[/if]
{NEXT I}

{VARIABLE_OP group[$enemy].enemy_weight add -25}

# get rid of old leader, replace it with a new leader of the appropriate group
[store_unit]
	variable=unit
	[filter]
		side={SIDE}
	[/filter]
[/store_unit]
[kill]
	x,y=$unit.x,$unit.y
[/kill]
{VARIABLE_OP leader rand 0.."$($group[$enemy|].leader.length|-1)"}
[if]
	[variable]
		name=scenario
		equals=1
	[/variable]
	[then]
		{VARIABLE type type}
	[/then]
	[else]
		{VARIABLE type advanced}
	[/else]
[/if]
[unit]
	x,y=$unit.x,$unit.y
	type=$group[$enemy].leader[$leader].$type|
	side={SIDE}
	canrecruit=1
	generate_name=yes
[/unit]

# set recruits; enemy leader always gets the first 5 recruits in list, plus whatever their leader would get
[set_recruit]
	side={SIDE}
	recruit=$group[$enemy].leader[$leader].recruit
[/set_recruit]
[allow_recruit]
	side={SIDE}
	type=$group[$enemy|].recruit[0]|,$group[$enemy|].recruit[1]|,$group[$enemy|].recruit[2]|,$group[$enemy|].recruit[3]|,$group[$enemy|].recruit[4]|
[/allow_recruit]

# pick random allied groups
{VARIABLE I 0}
{VARIABLE_OP ally rand 1.."$($group.length-1)"}
[while]
	[variable]
		name=I
		less_than={ALLIES}
	[/variable]
	[do]
		# skip over groups that are forbidden by leader selection
		[while]
			[variable]
				name=ally
				greater_than_equal_to=$group.length
			[/variable]
			[or]	
				[variable]
					name=ally
					equals=0
				[/variable]
			[/or]
			[or]	
				[variable]
					name=ally
					equals=$enemy
				[/variable]
			[/or]
			[do]
				[if]
					[variable]
						name=ally
						equals=$group.length
					[/variable]
					[then]
						{VARIABLE ally 0}
					[/then]
				[/if]
				{VARIABLE_OP ally add 1}
			[/do]
		[/while]

		# give appropriate recruits
		[allow_recruit]
			side={SIDE}
			type=$group[$ally].leader[0].recruit
		[/allow_recruit]

		# create helper unit
		[unit]
			x,y=$unit.x,$unit.y
			type=$group[$ally].helper
			side={SIDE}
			generate_name=yes
			role=helper{SIDE}
			[modifications]
				{TRAIT_LOYAL}
			[/modifications]
		[/unit]

		{VARIABLE_OP group[$ally].enemy_weight add -10}

		# just add additional allies in order rather than worrying about exclusive random selection
		{VARIABLE_OP ally add 1}
		{VARIABLE_OP I add 1}
	[/do]
[/while]

{VARIABLE side{SIDE}_level2 {LEVEL2}}
{VARIABLE side{SIDE}_level3 {LEVEL3}}

{CLEAR_VARIABLE type}
{CLEAR_VARIABLE ally}
{CLEAR_VARIABLE best}
#enddef
