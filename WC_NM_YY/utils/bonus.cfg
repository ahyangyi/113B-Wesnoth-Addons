#define WORLD_CONQUEST_CREATE_HERO
[event]
	name=world conquest hero
	first_time_only=no

	# check to see which traits this unit type is eligible for
	{VARIABLE bonus_trait 0}
	{FOREACH_FROM trait_assignment 1 trait_index}
		[if]
			[variable]
				name=trait_assignment[$trait_index].types
				contains=$hero_type
			[/variable]
			[then]
				{VARIABLE bonus_trait $trait_index}
			[/then]
		[/if]	
	{NEXT trait_index}
			
	[unit]
		side=$unit.side
		type=$hero_type
		x,y=$unit.x,$unit.y
		generate_name=yes
		overlays="misc/hero-icon.png"
		recalled=1
		artifact=none
		role=hero
		[modifications]
			{WORLD_CONQUEST_TRAIT_HEROIC}
			[insert_tag]
				name=trait
				variable=trait[$bonus_trait]
			[/insert_tag]
			[object]
				{WORLD_CONQUEST_EXPERIENCE_PENALTY}
			[/object]
		[/modifications]
	[/unit]

	{CLEAR_VARIABLE hero_trait}
	{CLEAR_VARIABLE bonus_trait}
[/event]
#enddef

#define WORLD_CONQUEST_PICKUP_TREASURE
[event]
	name=moveto
	first_time_only=no

	[filter]
		side=1,2,3
		[and]
			x,y=$treasure[0].x,$treasure[0].y
			[or]	
				x,y=$treasure[1].x,$treasure[1].y
			[/or]
			[or]
				x,y=$treasure[2].x,$treasure[2].y
			[/or]
			[or]
				x,y=$treasure[3].x,$treasure[3].y
			[/or]
			[or]
				x,y=$treasure[4].x,$treasure[4].y
			[/or]
			[or]
				x,y=$treasure[5].x,$treasure[5].y
			[/or]
			[or]
				x,y=$treasure[6].x,$treasure[6].y
			[/or]
			[or]
				x,y=$treasure[7].x,$treasure[7].y
			[/or]
			[or]
				x,y=$treasure[8].x,$treasure[8].y
			[/or]
			[or]
				x,y=$treasure[9].x,$treasure[9].y
			[/or]
		[/and]
		[and]
			[not]
				x,y=1,1
			[/not]
		[/and]
	[/filter]	
#	[if]
#		[variable]
#			name=unit.artifact
#			equals=none
#		[/variable]
#		[then]
			# figure out which treasure we just picked up
			{FOREACH treasure I}
				[if]
					[variable]
						name=treasure[$I].x
						equals=$unit.x
					[/variable]
					[variable]
						name=treasure[$I].y
						equals=$unit.y
					[/variable]
					[then]
						{VARIABLE T $I}
					[/then]
				[/if]
			{NEXT I}
	
			# apply any appropriate variable changes for this type of artifact
			[if]
				[variable]
					name=artifact[$treasure[$T].type].set_variable.name
					boolean_equals=true
				[/variable]
				[then]
					[insert_tag]
						name=set_variable
						variable=artifact[$treasure[$T].type].set_variable
					[/insert_tag]
				[/then]
			[/if]
			{VARIABLE unit.artifact $treasure[$T].type}
			[unstore_unit]
				variable=unit
			[/unstore_unit]
			[if]
				[variable]
					name=unit.canrecruit
					boolean_not_equals=1
				[/variable]
				[then]
					[unit_overlay]
						x,y=$unit.x,$unit.y
						image="misc/hero-icon.png"
					[/unit_overlay]
				[/then]
			[/if]

			# primary effects
			[object]
				silent=yes
				duration=forever
				[filter]
					x,y=$unit.x,$unit.y
				[/filter]
				[insert_tag]
					name=effect
					variable=artifact[$treasure[$T].type].effect
				[/insert_tag]
			[/object]

			# if there are any conditional objects attached to this artifact, throw them in
#			[if]
#				[variable]
#					name=artifact[$treasure[$T].type].object
#					boolean_equals=true
#				[/variable]
#				[then]
					[insert_tag]
						name=object
						variable=artifact[$treasure[$T].type].object
					[/insert_tag]
#				[/then]
#			[/if]
[message]
	speaker=narrator
	caption=$artifact[$treasure[$T].type].name
	message=$artifact[$treasure[$T].type].info
	image=$artifact[$treasure[$T].type].icon
[/message]
			[insert_tag]
				name=if
				variable=artifact[$treasure[$T].type].conditional
			[/insert_tag]
			[removeitem]
				x,y=$unit.x,$unit.y
			[/removeitem]
			{VARIABLE treasure[$T].x 1}
			{VARIABLE treasure[$T].y 1}
#		[/then]
#		[else]
#			[message]
#				speaker=unit
#				message=_"I'm already fully equipped; I cannot carry additional treasure."
#			[/message]
#		[/else]
#	[/if]
[/event]
#enddef

#define WORLD_CONQUEST_PICKUP_BONUS
[event]
	name=moveto
	first_time_only=no

	[filter]
		[not]
			# unused bonus hexes are defined as 1,1 and bonuses aren't placed at y=1 anyhow
			y=1
		[/not]
		[and]
			x,y=$bonus[0].x,$bonus[0].y
			[or]
				x,y=$bonus[1].x,$bonus[1].y
			[/or]
			[or]
				x,y=$bonus[2].x,$bonus[2].y
			[/or]
			[or]
				x,y=$bonus[3].x,$bonus[3].y
			[/or]
			[or]
				x,y=$bonus[4].x,$bonus[4].y
			[/or]
			[or]
				x,y=$bonus[5].x,$bonus[5].y
			[/or]
		[/and]
		[and]
			side=1,2,3
		[/and]
	[/filter]

	{FOREACH bonus I}
		[if]
			[variable]
				name=unit.x
				equals=$bonus[$I].x
			[/variable]
			[variable]
				name=unit.y
				equals=$bonus[$I].y
			[/variable]
			[then]
				{VARIABLE B $I}
			[/then]
		[/if]
	{NEXT I}

	[if]
		[variable]
			name=bonus[$B].type
			equals=2
		[/variable]
		[then]
			[if]
				[variable]
					name=player[$side_number].training
					equals=none
				[/variable]
				[then]

				[/then]
				[else]
					{VARIABLE_OP bonus[$B].type rand 0..1}
				[/else]
			[/if]
		[/then]
	[/if]
	[if]
		[variable]
			name=bonus[$B].type
			equals=0
		[/variable]
		[then]
			{VARIABLE_OP rand rand 1.."$($group.length-1)"}
			{VARIABLE_OP type rand 0.."$($group[$rand].recruit.length-1)"}
			{VARIABLE hero_type $group[$rand].recruit[$type].type}
			[fire_event]
				name=world conquest hero
				[primary_unit]
					x,y=$unit.x,$unit.y
				[/primary_unit]
			[/fire_event]
			[message]
				speaker=unit
				message=_"Someone is here!"
			[/message]
			[message]
				role=hero
				type=$hero_type
				[and]
					x,y=$unit.x,$unit.y
					radius=1
				[/and]
				message=$group[$rand].recruit[$type].found_dialogue
			[/message]
			{VARIABLE_OP temp string_length $group[$rand].recruit[$type].found_dialogue_reply}
			[if]
				[variable]
					name=temp
					greater_than=3
				[/variable]
				[then]
					[message]
						speaker=unit
						message=$group[$rand].recruit[$type].found_dialogue_reply
					[/message]
				[/then]
				[else]
					[message]
						speaker=unit
						message=_"Excellent. We could always use more help."
					[/message]
				[/else]
			[/if]			
			{CLEAR_VARIABLE type}
			{CLEAR_VARIABLE hero_type}
		[/then]
		[else]
			# find an unused treasure slot
			{VARIABLE T 0}
			{FOREACH_FROM treasure 4 I}
				[if]
					[variable]
						name=treasure[$I].x
						equals=1
					[/variable]
					[variable]
						name=treasure[$I].y
						equals=1
					[/variable]
					[then]
						{VARIABLE T $I}
					[/then]
				[/if]
			{NEXT I}

			{VARIABLE treasure[$T].x $bonus[$B].x}
			{VARIABLE treasure[$T].y $bonus[$B].y}
			{VARIABLE_OP treasure[$T].y add -1}
			{VARIABLE_OP treasure[$T].type rand 0.."$($artifact.length-1)"}

			[message]
				speaker=unit
				message=_"Hey, I found some treasure!"
			[/message]
			[message]
				speaker=narrator
				caption=$artifact[$treasure[$T].type].name
				message=$artifact[$treasure[$T].type].info
				image=$artifact[$treasure[$T].type].icon
			[/message]
			[item]
				x,y=$treasure[$T].x,$treasure[$T].y
				image=$artifact[$treasure[$T].type].icon
			[/item]
			{CLEAR_VARIABLE T}
		[/else]
	[/if]

	[removeitem]
		x,y=$bonus[$B|].x,$bonus[$B|].y
	[/removeitem]
	[item]
		x,y=$bonus[$B|].x,$bonus[$B|].y
		image=scenery/rubble.png
	[/item]
	{VARIABLE bonus[$B].x 1}
	{VARIABLE bonus[$B].y 1}
	{CLEAR_VARIABLE B}
[/event]
#enddef

#define WORLD_CONQUEST_GENERATE_BONUS
[event]
	name=world conquest bonuses

	# reset bonus/treasure hexes
	{VARIABLE J 0}
	[while]
		[variable]
			name=J
			less_than_equal_to=5
		[/variable]
		[do]
			{VARIABLE bonus[$J].x 1}
			{VARIABLE bonus[$J].y 1}
			{VARIABLE_OP J add 1}
		[/do]
	[/while]
	{VARIABLE J 0}
	[while]
		[variable]
			name=J
			less_than_equal_to=9
		[/variable]
		[do]
			{VARIABLE treasure[$J].x 1}
			{VARIABLE treasure[$J].y 1}
			{VARIABLE_OP J add 1}
		[/do]
	[/while]

	[while]
		[variable]
			name=I
			greater_than=0
		[/variable]
		[do]
			# look for eligible spots: no adjacent village or walls, not too close to a starting position, and spaced fairly far apart
			[store_locations]
				variable=candidates
				terrain=Gg,Gs,Hh,Uu,Uh,Ww,Dd,Ds,Re
				[and]
					[not]
						y=1
					[/not]
					[not]
						terrain=Kh
						radius=3
					[/not]
					[not]
						terrain=Gg^Vh,Ss^Vhs,Gs^Vht,Dd^Vda,Uu^Vud,Uu^Vu,Gg^Ve,Hh^Vhh,Mm^Vhh,Aa^Vha,Aa^Vha,Ww^Vm
						radius=1
					[/not]
					[not]
						x,y=$bonus[0].x,$bonus[0].y
						radius=9
					[/not]
					[not]
						x,y=$bonus[1].x,$bonus[1].y
						radius=9
					[/not]
					[not]
						x,y=$bonus[2].x,$bonus[2].y
						radius=9
					[/not]
					[not]
						x,y=$bonus[3].x,$bonus[3].y
						radius=9
					[/not]
					[not]
						x,y=$bonus[4].x,$bonus[4].y
						radius=9
					[/not]
					[not]
						terrain=Wo,Mm^Xm,Xu,Ql
						radius=1
					[/not]
				[/and]
			[/store_locations]	
	
			[if]		
				[variable]
					name=candidates.length
					greater_than=0
				[/variable]
				[then]
					# assuming there are any eligible spots, pick one at random
					[if]
						[variable]
							name=candidates.length
							equals=1
						[/variable]
						[then]
							{VARIABLE rand 0}
						[/then]
						[else]
							{VARIABLE_OP rand rand 0.."$($candidates.length-1)"}
						[/else]
					[/if]
					{VARIABLE bonus[$I].x $candidates[$rand].x}
					{VARIABLE bonus[$I].y $candidates[$rand].y}
					{VARIABLE_OP bonus[$I].type rand 0..2}

					[switch]
						# determine possible scenery images based on terrain
						variable=candidates[$rand].terrain
						[case]
							value=Re
							{VARIABLE rand "scenery/well.png","scenery/tent-ruin-1.png","scenery/signpost.png","items/bones.png","scenery/rock-cairn.png"}
						[/case]
						[case]
							value=Ww
							{VARIABLE rand "scenery/shipwreck-1.png","scenery/wreck.png"}
						[/case]
						[case]
							value=Hh
							{VARIABLE rand "scenery/temple1.png","scenery/mine-abandoned.png","scenery/tent-ruin-1.png","scenery/village-human-burned2.png"}
						[/case]
						[case]
							value=Uu
							{VARIABLE rand "items/altar.png","items/coffin-closed.png","items/bones.png","scenery/rock-cairn.png","scenery/trapdoor-open.png","scenery/well.png"}
						[/case]
						[case]
							value=Uh
							{VARIABLE rand "items/altar.png","items/coffin-closed.png","items/bones.png","scenery/rock-cairn.png","scenery/trapdoor-open.png"}
						[/case]
						[else]
							{VARIABLE rand "scenery/well.png","scenery/temple1.png","scenery/tent-fancy-red.png","scenery/tent-ruin-1.png","scenery/village-human-burned2.png","scenery/signpost.png"}
						[/else]
					[/switch]
				
 					# pick random scenery object from our list and place it on the map. also label it for ease of finding
					{VARIABLE_OP rand rand $rand}
					[item]
						x,y=$bonus[$I].x,$bonus[$I].y
						image=$rand
					[/item]
					{VARIABLE_OP name rand ({VILLAGE_NAMES})}
					{VARIABLE_OP name2 rand ("'s Point","'s Rest")}
					[label]
						x,y=$bonus[$I].x,$bonus[$I].y
						text=$name+$name2
					[/label]
				[/then]
			[/if]
			{CLEAR_VARIABLE candidates}
			{VARIABLE_OP I add -1}
		[/do]
	[/while]
	{CLEAR_VARIABLE name}
	{CLEAR_VARIABLE name2}
[/event]
#enddef
